name: gcc-build
on: push
jobs:
  gcc-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: ./gcc/build_dummy.sh

      - name: Get version name
        id: version
        run: |
          GCC_TARBALL=$(basename gcc-*.tar.gz)
          GCC_VERSION=${GCC_TARBALL%.tar.gz}
          echo "GCC_TARBALL=$GCC_TARBALL" >> "$GITHUB_OUTPUT"
          echo "GCC_VERSION=$GCC_VERSION" >> "$GITHUB_OUTPUT"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.GCC_VERSION }}
          release_name: ${{ steps.version.outputs.GCC_VERSION }}
          draft: false
          prerelease: false

      - name: Upload assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.version.outputs.GCC_TARBALL }}
          asset_name: ${{ steps.version.outputs.GCC_TARBALL }}
          asset_content_type: application/gzip
